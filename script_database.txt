& "C:\Program Files\MySQL\MySQL Server 8.0\bin\mysql.exe" --local-infile=1 -u root -p
SET GLOBAL local_infile = 1;

create database turismo;

use turismo;

CREATE TABLE puntos_referencia (
    ->     por_code VARCHAR(10),
    ->     name VARCHAR(100),
    ->     city_name VARCHAR(100),
    ->     country_name VARCHAR(100),
    ->     iata_code VARCHAR(10),
    ->     iso_country VARCHAR(2),
    ->     location_type VARCHAR(10),
    ->     lat DOUBLE,
    ->     lon DOUBLE
    -> );

-- Cargar los datos del archivo .csv
LOAD DATA LOCAL INFILE 'C:\\Users\\arroy\\OneDrive\\Documentos\\5to semestre\\Paradigmas de lenguajes\\Prolog\\ProyectoProlog2025\\optd_por_public.csv'
    -> INTO TABLE puntos_referencia
    -> FIELDS TERMINATED BY ','
    -> ENCLOSED BY '"'
    -> LINES TERMINATED BY '\n'
    -> IGNORE 1 LINES;

-- por_code: Código identificador del punto
-- name: Nombre del lugar o punto de referencia
-- city_name: Nombre de la ciudad donde está ubicado
-- country_name: Nombre del país
-- iata_code: Código IATA asociado (generalmente de aeropuertos)
-- iso_country: Código ISO de país (2 letras)
-- location_type: Tipo de ubicación (por ejemplo, ciudad, aeropuerto, etc.)
-- lat: Latitud geográfica
-- lon: Longitud geográfica

-- Crear la tabla destinos
CREATE TABLE destinos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL COMMENT 'Nombre del destino turístico',
  costo INT NOT NULL COMMENT 'Costo aproximado para visitar ese destino',
  tipo VARCHAR(50) COMMENT 'Tipo de destino (museo, playa, cultura, historia, ciudad, naturaleza, etc.)',
  idioma VARCHAR(50) COMMENT 'Idioma predominante en el destino',
  cultura VARCHAR(50) COMMENT 'Región o tipo cultural dominante (europea, latina, asiática, etc.)'
);

-- Insertar algunos datos de ejemplo
INSERT INTO destinos (nombre, costo, tipo, idioma, cultura) VALUES
('paris', 2000, 'museo', 'frances', 'europea'),
('cancun', 1000, 'playa', 'espanol', 'latina'),
('tokyo', 2500, 'cultura', 'japones', 'asiatica'),
('barcelona', 1500, 'playa', 'espanol', 'europea'),
('atenas', 1800, 'historia', 'griego', 'europea'),
('londres', 1000, 'museo', 'ingles', 'europea');

-- Añadimos la columna destino_id para relacionar puntos_referencia con destinos
ALTER TABLE puntos_referencia
ADD COLUMN destino_id INT NULL;

-- Creamos la relación (foreign key) entre puntos_referencia.destino_id y destinos.id
ALTER TABLE puntos_referencia
ADD CONSTRAINT fk_destino
FOREIGN KEY (destino_id) REFERENCES destinos(id);

-- Eliminamos la columna 'name' de la tabla puntos_referencia porque es redundante
ALTER TABLE puntos_referencia
DROP COLUMN name;

-- Actualizamos la columna destino_id en puntos_referencia
-- haciendo un JOIN con destinos para relacionar cada punto con su destino correspondiente
UPDATE puntos_referencia pr
JOIN destinos d ON pr.city_name = d.nombre
SET pr.destino_id = d.id;
